# ---- Builder Stage ----
# This stage installs all dependencies (including dev) and builds the app
FROM node:20-slim AS builder
WORKDIR /app

# Install OpenSSL, which Prisma needs
RUN apt-get update -y && apt-get install -y openssl

# Copy root package.json for workspace configuration
COPY package*.json ./

# Copy shared packages first (needed for @repo/* dependencies)
COPY packages ./packages

# Copy backend package files
COPY apps/backend/package*.json ./apps/backend/
WORKDIR /app/apps/backend

# Install dependencies (workspace will resolve @repo/* packages)
RUN npm install

# Build shared packages first
WORKDIR /app/packages/utils
RUN npm run build
WORKDIR /app/packages/common-types  
RUN npm run build

# Back to backend directory
WORKDIR /app/apps/backend

# Copy source code and Prisma schema
COPY apps/backend/prisma ./prisma
COPY apps/backend/src ./src
COPY apps/backend/tsconfig.json ./tsconfig.json

# Generate the Prisma client and build the TypeScript code
RUN npx prisma generate
RUN npm run build

# ---- Runner Stage ----
# This stage creates the final, lightweight image with only what's needed to run
FROM node:20-slim
WORKDIR /app

# Install OpenSSL here as well
RUN apt-get update -y && apt-get install -y openssl

# Copy the entire built workspace structure
COPY --from=builder /app ./

# Set working directory to backend
WORKDIR /app/apps/backend

# Expose the application port
EXPOSE 8080

# Command to run the application
CMD ["node", "dist/index.js"]
